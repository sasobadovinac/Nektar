Description: Fixes a number of compiler warnings issued by GCC9
Author: Chris Cantwell <c.cantwell@imperial.ac.uk>
Origin: upstream
---
This patch header follows DEP-3: http://dep.debian.net/deps/dep3/
--- a/library/LibUtilities/BasicUtils/FieldIOHdf5.h
+++ b/library/LibUtilities/BasicUtils/FieldIOHdf5.h
@@ -232,6 +232,7 @@
             homs(in.homs)
         {
         }
+        OffsetHelper& operator=(const OffsetHelper &in) = default;
 
         uint64_t data, order, homy, homz, homs;
     };
--- a/library/LibUtilities/Foundations/Basis.h
+++ b/library/LibUtilities/Foundations/Basis.h
@@ -79,6 +79,9 @@
             {
             }
 
+            /// Assignment operator
+            BasisKey& operator=(const BasisKey &B) = default;
+
             /// Returns the order of the basis.
             inline int GetNumModes() const
             {
--- a/library/LibUtilities/LinearAlgebra/ScaledMatrix.hpp
+++ b/library/LibUtilities/LinearAlgebra/ScaledMatrix.hpp
@@ -115,6 +115,8 @@
             LIB_UTILITIES_EXPORT NekMatrix(typename boost::call_traits<NumberType>::const_reference scale, const ThisType& rhs);
            
 
+            LIB_UTILITIES_EXPORT ThisType& operator=(const ThisType& in) = default;
+
             LIB_UTILITIES_EXPORT ConstGetValueType operator()(unsigned int row, unsigned int col) const;
 
             LIB_UTILITIES_EXPORT unsigned int GetStorageSize() const ;
--- a/library/NekMeshUtils/MeshElements/ElementConfig.h
+++ b/library/NekMeshUtils/MeshElements/ElementConfig.h
@@ -72,6 +72,8 @@
     {
     }
 
+    ElmtConfig& operator=(const ElmtConfig &) = default;
+
     /// Element type (e.g. triangle, quad, etc).
     LibUtilities::ShapeType m_e;
     /// Denotes whether the element contains face nodes. For 2D elements, if
--- a/library/UnitTests/testNekPoint.cpp
+++ b/library/UnitTests/testNekPoint.cpp
@@ -53,6 +53,7 @@
             public:
                 PointTestClass() : m_dataValue(0) {}
                 explicit PointTestClass(int data) : m_dataValue(data) {}
+                PointTestClass(const PointTestClass&) = default;
                 ~PointTestClass(){}
 
                 PointTestClass operator=(const PointTestClass& rhs)
--- a/library/UnitTests/testNekVector.cpp
+++ b/library/UnitTests/testNekVector.cpp
@@ -57,6 +57,7 @@
             public:
                 VectorTestClass() : m_dataValue(0) {}
                 explicit VectorTestClass(int data) : m_dataValue(data) {}
+                VectorTestClass(const VectorTestClass& in) = default;
                 ~VectorTestClass(){}
 
                 VectorTestClass operator=(const VectorTestClass& rhs)
