#include <boost/dll/import.hpp>

#include <LibUtilities/BasicUtils/FileSystem.h>
#include <SolverUtils/Plugin.h>

namespace dll = boost::dll;

namespace Nektar
{
namespace SolverUtils
{

fs::path install_dir = "@CMAKE_INSTALL_PREFIX@";
fs::path plugin_base_dir = "@NEKTAR_SOLVER_PLUGIN_DIR@";

std::shared_ptr<SolverPlugin> LoadSolverPlugin(std::string name)
{
    std::string libname = "lib" + name + ".so";

    boost::shared_ptr<SolverPlugin> plugin = dll::import<SolverPlugin>(
        install_dir / plugin_base_dir / libname,
        "plugin",
        dll::load_mode::append_decorations);

    plugin->Initialise();

    // convert to std::shared_ptr to avoid using boost::shared_ptr
    return std::shared_ptr<SolverPlugin>(
        plugin.get(), [plugin](SolverPlugin*) mutable {plugin.reset();});
}

}
}
